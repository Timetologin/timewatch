{"ast":null,"code":"// client/src/api.js\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\nexport function authHeader() {\n  // תאימות לאחור: קודם חפש token ישן, אם אין – חפש auth.token\n  let token = localStorage.getItem('token');\n  if (!token) {\n    try {\n      const auth = JSON.parse(localStorage.getItem('auth') || '{}');\n      token = (auth === null || auth === void 0 ? void 0 : auth.token) || null;\n    } catch {\n      token = null;\n    }\n  }\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n}\nexport async function api(path, opts = {}) {\n  const res = await fetch(`${API_URL}${path}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      ...authHeader(),\n      ...(opts.headers || {})\n    },\n    ...opts\n  });\n  if (!res.ok) {\n    var _await$res$json$catch;\n    const msg = ((_await$res$json$catch = await res.json().catch(() => ({}))) === null || _await$res$json$catch === void 0 ? void 0 : _await$res$json$catch.message) || res.statusText;\n    throw new Error(msg);\n  }\n  return res.json();\n}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","authHeader","token","localStorage","getItem","auth","JSON","parse","Authorization","api","path","opts","res","fetch","headers","ok","_await$res$json$catch","msg","json","catch","message","statusText","Error"],"sources":["C:/Users/user/Desktop/timewatch-clone/client/src/api.js"],"sourcesContent":["// client/src/api.js\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\r\n\r\nexport function authHeader() {\r\n  // תאימות לאחור: קודם חפש token ישן, אם אין – חפש auth.token\r\n  let token = localStorage.getItem('token');\r\n  if (!token) {\r\n    try {\r\n      const auth = JSON.parse(localStorage.getItem('auth') || '{}');\r\n      token = auth?.token || null;\r\n    } catch {\r\n      token = null;\r\n    }\r\n  }\r\n  return token ? { Authorization: `Bearer ${token}` } : {};\r\n}\r\n\r\nexport async function api(path, opts = {}) {\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...authHeader(),\r\n      ...(opts.headers || {})\r\n    },\r\n    ...opts\r\n  });\r\n  if (!res.ok) {\r\n    const msg = (await res.json().catch(() => ({})))?.message || res.statusText;\r\n    throw new Error(msg);\r\n  }\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B;EACA,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACzC,IAAI,CAACF,KAAK,EAAE;IACV,IAAI;MACF,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;MAC7DF,KAAK,GAAG,CAAAG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,KAAK,KAAI,IAAI;IAC7B,CAAC,CAAC,MAAM;MACNA,KAAK,GAAG,IAAI;IACd;EACF;EACA,OAAOA,KAAK,GAAG;IAAEM,aAAa,EAAE,UAAUN,KAAK;EAAG,CAAC,GAAG,CAAC,CAAC;AAC1D;AAEA,OAAO,eAAeO,GAAGA,CAACC,IAAI,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGhB,OAAO,GAAGa,IAAI,EAAE,EAAE;IAC3CI,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,GAAGb,UAAU,CAAC,CAAC;MACf,IAAIU,IAAI,CAACG,OAAO,IAAI,CAAC,CAAC;IACxB,CAAC;IACD,GAAGH;EACL,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACG,EAAE,EAAE;IAAA,IAAAC,qBAAA;IACX,MAAMC,GAAG,GAAG,EAAAD,qBAAA,GAAC,MAAMJ,GAAG,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,cAAAH,qBAAA,uBAAnCA,qBAAA,CAAsCI,OAAO,KAAIR,GAAG,CAACS,UAAU;IAC3E,MAAM,IAAIC,KAAK,CAACL,GAAG,CAAC;EACtB;EACA,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}